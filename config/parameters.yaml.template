parameters:
  app.config:
    providerType: gitRepository #Supported: gitRepository, gitlabApiFiles, gitlabApiArchive
    parserType: composerJsonAndLock #Supported: composerJson, composerJsonAndLock, composerFull(it can be used only with gitlabApiArchive)
    writerType: xlsx #Supported: xlsx
    gitlab:
      url: https://gitlab.com
      apiToken: #https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html - read_repository permission is required
    ansibleVaultPassword: #Used by provider gitlabApiArchive to decrypt auth.json.encrypted if present

  package.config:
    #Options available in parser composerJsonAndLock
    includeInstalledVersion: false
    installedVersionDisplayedIn: comment #Supported: comment, value

    packageGroups:
      - { name: Group1, parserPriority: 10, writerOrder: 20, groupType: require,  regex: /.*group1.*/}
      - { name: Group2, parserPriority: 20, writerOrder: 10, groupType: require,  regex: /.*group2*/ }
      - { name: Group3, parserPriority: 0,  writerOrder: 30, groupType: replace,  regex: /.*/ }
      - { name: Group4, parserPriority: 0,  writerOrder: 40, groupType: observed, regex: /.*/ } #groupType available in parser composerJsonAndLock
      - { name: Group5, parserPriority: 0,  writerOrder: 40, groupType: patchset, regex: /.*/ } #groupType available in parser composerJsonAndLock
    observedPackages: #Options for groupType observed
      - vendor/package_name1
      - vendor/package_name2

  writer.config:
    local:
      fileName: "projects-{date}" #Without file extension
      fileDirectory: var/results

  repository.config:
    repositoryList:
      - name: project1
        directory: var/repositories/project1
        remote: git@git.com:projects/project1.git
        branch: origin/master #Format supported for provider: gitRepository
      - name: project2
        directory: var/repositories/project2
        remote: git@git.com:projects/project2.git
        branch: master #Format supported for provider: gitlabApiFiles, gitlabApiArchive